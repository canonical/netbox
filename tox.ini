# Copyright 2024 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
skipsdist=True
skip_missing_interpreters = True
envlist = lint, unit, static, coverage-report

[vars]
charm_path =  {toxinidir}/charm/
src_path = {[vars]charm_path}/src/
tst_path = {[vars]charm_path}/tests/
all_path = {[vars]src_path} {[vars]tst_path}

[testenv]
changedir = {[vars]charm_path}
setenv =
  PYTHONPATH = {[vars]charm_path}:{[vars]src_path}:{[vars]charm_path}/lib
  PYTHONBREAKPOINT=ipdb.set_trace
  PY_COLORS=1
passenv =
  PYTHONPATH
  CHARM_BUILD_DIR
  MODEL_SETTINGS

[testenv:fmt]
description = Apply coding style standards to code
deps =
    black
    isort
commands =
    isort {[vars]all_path}
    black {[vars]all_path} --target-version=py310

[testenv:src-docs]
allowlist_externals=sh
setenv =
    PYTHONPATH = {[vars]charm_path}:{[vars]charm_path}/lib:{[vars]src_path}
description = Generate documentation for src
deps =
    -r{[vars]charm_path}/requirements-doc.txt
commands =
    ; cannot run lazydocs directly due to needing to run it on src/* which produces an invocation error in tox
    sphinx-build -M markdown ./src-docs ./build

[testenv:lint]
description = Check code against coding style standards
deps =
    black
    codespell
    flake8
    flake8-builtins
    flake8-copyright
    flake8-docstrings>=1.6.0
    flake8-docstrings-complete>=1.0.3
    flake8-test-docs>=1.0
    isort
    mypy
    pep8-naming
    pydocstyle>=2.10
    pylint
    pyproject-flake8
    pytest
    pytest-asyncio
    pytest-operator
    python-magic
    requests
    types-PyYAML
    types-requests
    -r{[vars]charm_path}/requirements.txt
commands =
    pydocstyle {[vars]src_path}
    # uncomment the following line if this charm owns a lib
    # codespell {[vars]lib_path}
    codespell {[vars]charm_path} \
      --skip {[vars]charm_path}/build --skip {[vars]charm_path}/lib --skip {[vars]charm_path}/venv \
      --skip {[vars]charm_path}/.mypy_cache --skip {[vars]charm_path}/icon.svg
    # pflake8 wrapper supports config from pyproject.toml
    pflake8 {[vars]all_path} --ignore=W503
    isort --check-only --diff {[vars]all_path}
    black --target-version=py310 --check --diff {[vars]all_path}
    mypy {[vars]all_path}
    pylint {[vars]all_path}

[testenv:integration]
description = Run integration tests
deps =
    boto3
    juju >=3.0
    pytest
    pytest-asyncio
    pytest-operator
    git+https://github.com/canonical/saml-test-idp.git
    -r{[vars]charm_path}/requirements.txt
setenv =
    CHARMCRAFT_ENABLE_EXPERIMENTAL_EXTENSIONS=true
commands =
    pytest -v -x --tb native --ignore={[vars]tst_path}unit --log-cli-level=INFO -s {posargs}

[testenv:static]
description = Run static analysis tests
deps =
    bandit[toml]
    -r{[vars]charm_path}/requirements.txt
commands =
    bandit -c {[vars]charm_path}/pyproject.toml -r {[vars]src_path} {[vars]tst_path}

[testenv:unit]
description = Run unit tests
deps =
    cosl
    coverage[toml]
    pytest
    -r{[vars]charm_path}/requirements.txt
commands =
    coverage run --source={[vars]src_path} \
        -m pytest --ignore={[vars]tst_path}integration -v --tb native -s {posargs}
    coverage report

[testenv:coverage-report]
description = Create test coverage report
deps =
    coverage[toml]
    pytest
    -r{[vars]charm_path}/requirements.txt
commands =
    coverage report
