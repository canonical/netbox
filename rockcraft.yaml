# Copyright 2024 Canonical Ltd.
# See LICENSE file for licensing details.

name: netbox
base: ubuntu@22.04
version: '0.1'
summary: Charmed NetBox project (https://github.com/canonical/netbox/)
description: |
    NetBox is the go-to solution for modeling and documenting network
    infrastructure for thousands of organizations worldwide. As a successor
    to legacy IPAM and DCIM applications, NetBox provides a cohesive,
    extensive, and accessible data model for all things networked.
license: Apache-2.0
platforms:
    amd64:

# To ensure the django-framework extension works properly, your Django application
# should have an `wsgi.py` file with an `application` object as the WSGI entrypoint.
extensions:
    - django-framework

parts:
    # NetBox project does not suit the paas-app-charmer project yet.
    # Until paas-app-charmer project supports the NetBox
    # directory organisation, this changes are needed.
    django-framework/install-app:
        after:
            - django-framework/dependencies
        override-build: |-
            # At this point, the original configuration does not work correctly.
            # Some missing env vars like DJANGO_SECRET_KEY...
            NETBOX_CONFIGURATION=netbox.configuration_testing PYTHONUSERBASE=${CRAFT_STAGE} python3 manage.py collectstatic --no-input
            craftctl default
        override-prime: |-
            craftctl default
            # Until paas-app-charmer provides a direct migrate for Django
            echo -e '#!/bin/bash\nexec python3 manage.py migrate'  > "${CRAFT_PRIME}/django/app/migrate.sh"
        permissions:
          - path: django/app/reports
            owner: 584792
            group: 584792
          - path: django/app/scripts
            owner: 584792
            group: 584792

    django-framework/dependencies:
        # pyproject.toml breaks the build. Remove it.
        override-build: |-
            rm -f pyproject.toml
            craftctl default
        build-packages:
            - pkg-config
            - libxmlsec1-dev
        stage-packages:
            # needed for saml
            - libxmlsec1
            - libxmlsec1-openssl

    cron:
      stage-packages:
        - cron
      plugin: nil

services:
  cron:
    override: merge
    summary: "Cron Service"
    command: "/usr/sbin/cron -f"
    startup: enabled
